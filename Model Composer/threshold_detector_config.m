
function threshold_detector_config(this_block)

  % Revision History:
  %
  %   30-Jun-2025  (23:53 hours):
  %     Original code was machine generated by Xilinx's System Generator after parsing
  %     C:\Users\fsydere\Workspace\IFM\Model Composer\threshold_detector.v
  %
  %

  this_block.setTopLevelLanguage('Verilog');

  this_block.setEntityName('threshold_detector');

  % System Generator has to assume that your entity  has a combinational feed through; 
  %   if it  doesn't, then comment out the following line:
  this_block.tagAsCombinational;

  this_block.addSimulinkInport('clk');
  this_block.addSimulinkInport('reset');
  this_block.addSimulinkInport('real_part');
  this_block.addSimulinkInport('imag_part');
  this_block.addSimulinkInport('data_valid');

  this_block.addSimulinkOutport('threshold');
  this_block.addSimulinkOutport('threshold_calculated');

  threshold_port = this_block.port('threshold');
  threshold_port.setType('UFix_48_0');

  threshold_calculated_port = this_block.port('threshold_calculated');
  threshold_calculated_port.setType('UFix_1_0');
  threshold_calculated_port.useHDLVector(false);


  % -----------------------------
  if (this_block.inputTypesKnown)
    % do input type checking, dynamic output type and generic setup in this code block.

    if (this_block.port('clk').width ~= 1)
      this_block.setError('Input data type for port "clk" must have width=1.');
    end

    this_block.port('clk').useHDLVector(false);

    if (this_block.port('reset').width ~= 1)
      this_block.setError('Input data type for port "reset" must have width=1.');
    end

    this_block.port('reset').useHDLVector(false);

    if (this_block.port('real_part').width ~= 16)
      this_block.setError('Input data type for port "real_part" must have width=16.');
    end

    if (this_block.port('imag_part').width ~= 16)
      this_block.setError('Input data type for port "imag_part" must have width=16.');
    end

    if (this_block.port('data_valid').width ~= 1)
      this_block.setError('Input data type for port "data_valid" must have width=1.');
    end

    this_block.port('data_valid').useHDLVector(false);

  end  % if(inputTypesKnown)
  % -----------------------------

  % System Generator found no apparent clock signals in the HDL, assuming combinational logic.
  % -----------------------------
   if (this_block.inputRatesKnown)
     inputRates = this_block.inputRates; 
     uniqueInputRates = unique(inputRates); 
     outputRate = uniqueInputRates(1);
     for i = 2:length(uniqueInputRates)
       if (uniqueInputRates(i) ~= Inf)
         outputRate = gcd(outputRate,uniqueInputRates(i));
       end
     end  % for(i)
     for i = 1:this_block.numSimulinkOutports 
       this_block.outport(i).setRate(outputRate); 
     end  % for(i)
   end  % if(inputRatesKnown)
  % -----------------------------

    uniqueInputRates = unique(this_block.getInputRates);


  % Add addtional source files as needed.
  %  |-------------
  %  | Add files in the order in which they should be compiled.
  %  | If two files "a.vhd" and "b.vhd" contain the entities
  %  | entity_a and entity_b, and entity_a contains a
  %  | component of type entity_b, the correct sequence of
  %  | addFile() calls would be:
  %  |    this_block.addFile('b.vhd');
  %  |    this_block.addFile('a.vhd');
  %  |-------------

  %    this_block.addFile('');
  %    this_block.addFile('');
  this_block.addFile('threshold_detector.v');

return;


% This function converts the matlab array to VHDL array Style 
% and this is valid only in case of generic parameters. 
function arrayHDLType = convertArrayType(inArr) 
arrayHDLType = '';
for i=1:length(inArr)
    if (i == 1)
        arrayHDLType = [arrayHDLType '(' num2str(inArr(i))]; 
    elseif (i == length(inArr)) 
        arrayHDLType = [arrayHDLType ',' num2str(inArr(i)) ')']; 
    else 
        arrayHDLType = [arrayHDLType ',' num2str(inArr(i))]; 
    end 
end 
